import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.web.client.HttpServerErrorException;
import org.springframework.web.client.RestTemplate;
import sgcib.tsf.dragonBook.DragonBookApplication;
import sgcib.tsf.dragonBook.model.efts.EftsDealData;
import sgcib.tsf.dragonBook.model.efts.EftsPortfolioRequest;

import java.util.List;
import java.util.Map;

import static org.mockito.ArgumentMatchers.any;
import static org.mockito.ArgumentMatchers.eq;
import static org.mockito.Mockito.mock;

@SpringBootTest(classes = DragonBookApplication.class)
@ContextConfiguration
@ActiveProfiles("test")
@RunWith(SpringRunner.class)
@ExtendWith(SpringExtension.class)
public class EftsLnbServiceImplTest {

    @Mock
    private RestTemplate restTemplateMock;
    
    private EftsLnbServiceImpl eftsLnbServiceImpl;

    @Before
    public void setup() {
        restTemplateMock = mock(RestTemplate.class);
        eftsLnbServiceImpl = new EftsLnbServiceImpl(restTemplateMock);
        eftsLnbServiceImpl.eftsDealUrl = "https://efts-testing/api/deals";
    }

    @Test
    public void testGetDealData() {
        String foPortfolio = "PR1234";
        EftsDealData eftsDealData = new EftsDealData();
        ResponseEntity<EftsDealData[]> responseEntity = ResponseEntity.ok(new EftsDealData[]{eftsDealData});

        EftsPortfolioRequest eftsPortfolioRequest = new EftsPortfolioRequest();
        eftsPortfolioRequest.setFoPortfolio(List.of("PV1234"));

        Mockito.when(restTemplateMock.exchange(
                eq("https://efts-testing/api/deals"),
                eq(HttpMethod.POST),
                any(HttpEntity.class),
                eq(EftsDealData[].class)
        )).thenReturn(responseEntity);

        List<EftsDealData> result = eftsLnbServiceImpl.getDealData(foPortfolio);

        Assert.assertNotNull(result);
        Assert.assertFalse(result.isEmpty());
        Assert.assertEquals(eftsDealData, result.get(0));
    }

    @Test(expected = HttpServerErrorException.class)
    public void testGetDealDataServerError() {
        String foPortfolio = "PR1234";

        Mockito.when(restTemplateMock.exchange(
                eq("https://efts-testing/api/deals"),
                eq(HttpMethod.POST),
                any(HttpEntity.class),
                eq(EftsDealData[].class)
        )).thenThrow(HttpServerErrorException.class);

        eftsLnbServiceImpl.getDealData(foPortfolio);
    }
}
